install.packages('c50')
install.packages(kernlab)
install.packages('kernlab')
install.packages('C50')
library(C50)
library(kernlab)
read.csv('E:\\NCSU\\Semester 2\\Algorithms for Data Guided Business Intelligence\\Homeworks\\Design and Analysis of MLExperiments\\datasets',header=FALSE,sep = ',')
read.csv('E:\\NCSU\\Semester 2\\Algorithms for Data Guided Business Intelligence\\Homeworks\\Design and Analysis of MLExperiments\\datasets\\Iris_data.txt',header=FALSE,sep = ',')
source('E:/NCSU/Semester 2/Algorithms for Data Guided Business Intelligence/Homeworks/Design and Analysis of MLExperiments/Multiple.Hypothesis.Testing.Skeleton.R', echo=TRUE)
iris
?sample
sample(iris)
sample(iris,10)
sample(iris,size=10)
sample(iris,10)
sample(iris,1)
sample(iris,0.1)
sample(iris,0.2)
sample(iris,2)
sample(iris,3)
length(iris)
iris
iris[,]
iris[1:10,]
sample(1:150,10)
sample(1:150,1)
sample(1:150,1)
?cvFolds
??cvFolds
install.packages('perry')
library(perry)
?cvFolds
length(iris)
nrow(iris)
train_iris<-sample(1:nrow(iris),0.6*nrow(iris))
train_iris
train_iris_index<-sample(1:nrow(iris),0.6*nrow(iris))
iris[train_iris_index,]
iris[-train_iris_index,]
nrow(iris[-train_iris_index,])
nrow(iris[train_iris_index,])
train_iris_index<-sample(1:nrow(iris),0.6*nrow(iris))
train_iris<-iris[train_iris_index,]
test_iris<-iris[-train_iris_index,]
train_iris
test_iris
train_iris_index<-sample(1:nrow(iris),0.6*nrow(iris))
train_iris<-iris[train_iris_index,]
test_iris<-iris[-train_iris_index,]
train_iris
test_iris
iris_cvfolds<-cvFolds(0.6*nrow(iris),K=10)
iris_cvfolds
length(iris_cvfolds)
nrow(iris_cvfolds)
iris_cvfolds$subsets
iris_cvfolds<-cvFolds(nrow(train_iris),K=10)
iris_cvfolds
sample(1:nrow(iris),nrow(iris))
train_iris_index<-sample(1:nrow(iris),nrow(iris))
iris[train_iris_index,]
train_iris_index<-sample(1:nrow(iris),nrow(iris))
random_iris<-iris[train_iris_index,]
iris_cvfolds<-cvFolds(nrow(random_iris),K=10)
?C5.0
random_iris[iris_cvfolds$subsets[iris_cvfolds$which != 1], ]
random_iris[iris_cvfolds$subsets[iris_cvfolds$which = 1], ]
random_iris[iris_cvfolds$subsets[iris_cvfolds$which == 1], ]
C5.0(train[,1:4],train[,5])
for(i in 1:10)
{
train<-random_iris[iris_cvfolds$subsets[iris_cvfolds$which != i], ]
test<-random_iris[iris_cvfolds$subsets[iris_cvfolds$which == i], ]
tree.model<-C5.0(train[,1:4],train[,5])
}
tree.model
?predict
predict(tree.model,newdata=test[,1:4])
?which
tree.test
for(i in 1:10)
{
train<-random_iris[iris_cvfolds$subsets[iris_cvfolds$which != i], ]
test<-random_iris[iris_cvfolds$subsets[iris_cvfolds$which == i], ]
tree.model<-C5.0(train[,1:4],train[,5])
tree.test<-predict(tree.model,newdata=test[,1:4])
}
tree.test
test[,5]
tree.test==test[,5]
[tree.test==test[,5]]==TRUE]
count(tree.test==test[,5])
a<-tree.test==test[,5]
a
a==TRUE
length(a==TRUE)
length(a==FALSE)
length(a[a==FALSE])
length(a[a==TRUE])
for(i in 1:10)
{
train<-random_iris[iris_cvfolds$subsets[iris_cvfolds$which != i], ]
test<-random_iris[iris_cvfolds$subsets[iris_cvfolds$which == i], ]
tree.model<-C5.0(train[,1:4],train[,5])
tree.test<-predict(tree.model,newdata=test[,1:4])
a<-tree.test==test[,5]
error_c5.0<-length(a[a==TRUE])*100/length(a)
print(error_c5.0)
}
head(train)
iris_cvfolds
gausspr(V5~.,data=train)
error_c5.0<-c()
error_svm<-c()
error_c5.0
for(i in 1:10)
{
train<-random_iris[iris_cvfolds$subsets[iris_cvfolds$which != i], ]
test<-random_iris[iris_cvfolds$subsets[iris_cvfolds$which == i], ]
tree.model<-C5.0(train[,1:4],train[,5])
svm.model<-gausspr(V5~.,data=train)
tree.test<-predict(tree.model,newdata=test[,1:4])
svm.test<-predict(svm.model,newdata=test[,1:4])
a<-tree.test==test[,5]
b<-svm.test==test[,5]
error_c5.0<-c(error_c5.0,length(a[a==TRUE])*100/length(a))
print(error_c5.0)
}
error_c5.0
error_c5.0<-c()
error_svm<-c()
for(i in 1:10)
{
train<-random_iris[iris_cvfolds$subsets[iris_cvfolds$which != i], ]
test<-random_iris[iris_cvfolds$subsets[iris_cvfolds$which == i], ]
tree.model<-C5.0(train[,1:4],train[,5])
svm.model<-gausspr(V5~.,data=train)
tree.test<-predict(tree.model,newdata=test[,1:4])
svm.test<-predict(svm.model,newdata=test[,1:4])
a<-tree.test==test[,5]
b<-svm.test==test[,5]
error_c5.0<-c(error_c5.0,length(a[a==TRUE])*100/length(a))
error_svm<-c(error_svm,length(b[b==TRUE])*100/length(b))
}
print('C5.0 Error %')
print(error_c5.0)
print('SVM Error %')
print(error_svm)
?t.test
t.test(error_c5.0,error_svm,paired=TRUE)
source('E:/NCSU/Semester 2/Algorithms for Data Guided Business Intelligence/Homeworks/Design and Analysis of MLExperiments/Multiple.Hypothesis.Testing.Skeleton.R', echo=TRUE)
?ksvm
source('E:/NCSU/Semester 2/Algorithms for Data Guided Business Intelligence/Homeworks/Design and Analysis of MLExperiments/Multiple.Hypothesis.Testing.Skeleton.R', echo=TRUE)
ksvm(train[,1:4],train[,5])
ksvm(V5~.,data=train)
error_c5.0<-c()
error_svm<-c()
for(i in 1:10)
{
train<-random_iris[iris_cvfolds$subsets[iris_cvfolds$which != i], ]
test<-random_iris[iris_cvfolds$subsets[iris_cvfolds$which == i], ]
tree.model<-C5.0(train[,1:4],train[,5])
#svm.model<-gausspr(V5~.,data=train)
svm.model<-ksvm(V5~.,data=train)
tree.test<-predict(tree.model,newdata=test[,1:4])
svm.test<-predict(svm.model,newdata=test[,1:4])
a<-tree.test==test[,5]
b<-svm.test==test[,5]
error_c5.0<-c(error_c5.0,length(a[a==TRUE])*100/length(a))
error_svm<-c(error_svm,length(b[b==TRUE])*100/length(b))
}
print('C5.0 Error %')
print(error_c5.0)
print('SVM Error %')
print(error_svm)
t.test(error_c5.0,error_svm,paired=TRUE)
source('E:/NCSU/Semester 2/Algorithms for Data Guided Business Intelligence/Homeworks/Design and Analysis of MLExperiments/Multiple.Hypothesis.Testing.Skeleton.R', echo=TRUE)
source('E:/NCSU/Semester 2/Algorithms for Data Guided Business Intelligence/Homeworks/Design and Analysis of MLExperiments/Multiple.Hypothesis.Testing.Skeleton.R', echo=TRUE)
